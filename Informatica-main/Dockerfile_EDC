# Pull base image.
FROM OS_NAME

#Define the ENV variable

ENV ORACLE_HOME=/usr/lib/oracle/12.2/client64
ENV PATH=$PATH:$ORACLE_HOME/bin
ENV LD_LIBRARY_PATH=$ORACLE_HOME/lib
ENV TNS_ADMIN=$ORACLE_HOME/network/admin
ENV PATH=${PATH}:/home/Informatica/server/bin
ENV LD_LIBRARY_PATH=${LD_LIBRARY_PATH}:/home/Informatica/server/bin
ENV LANG=C
ENV LC_ALL=C
ENV JAVA_HOME=/home/Informatica/java
ENV INFA_HOME=/home/Informatica
ENV PATH=$PATH:/home/Informatica/services/shared/bin
ENV INFA_JDK_HOME=/home/Informatica/java
ENV PGHOME=/usr/pgsql-9.6
ENV PATH=${PATH}:$PGHOME
ENV LD_LIBRARY_PATH=${LD_LIBRARY_PATH}:$PGHOME/lib
ENV PGSERVICEFILE=/home/pg_service.conf

RUN export OS_VERSION="$(grep release /etc/*-release | cut -d: -f2 | sort -u | sed 's/(.*)//' | awk '{print $NF}' | cut -c1,2,3)" &&  export IS_RHEL="$(grep -w ID /etc/*-release | cut -d'=' -f2 | sed 's/.\(.*\)/\1/' | sed 's/\(.*\)./\1/')" && export countCentOS="$(ls -1 /etc/yum.repos.d/CentOS-Linux-* 2>/dev/null | wc -l)" && if [[ $OS_VERSION == *"8."* || $OS_VERSION == *"8 (Core)"* ]] && [[ ! $IS_RHEL == "rhel" ]] && [[ $countCentOS != 0 ]] ; then sed -i 's/mirrorlist/#mirrorlist/g' /etc/yum.repos.d/CentOS-Linux-* && sed -i 's|#baseurl=http://mirror.centos.org|baseurl=http://vault.centos.org|g' /etc/yum.repos.d/CentOS-Linux-* ; fi

RUN \
  #Install some basic commands
  yum install wget libaio csh file krb5-libs krb5-workstation iputils zip unzip bind-utils traceroute telnet nc net-tools which gcc man rsync make openssh-clients openssh-server initscripts kernel-devel libtirpc-devel openssl libxslt systemd-sysv sudo -y && \
  #
  #Enabling NTP for clock synchronization
  #systemctl enable ntpd && \
  #
  #Install OpenSSL
  yum install libtool perl-core zlib-devel -y && \
  
  #
  #Install JDK
  
  #
 #setup ssh
ssh-keygen -f /root/.ssh/id_rsa -t rsa -N '' && \
  cat /root/.ssh/id_rsa.pub >> /root/.ssh/authorized_keys
  
  #yum install https://download.postgresql.org/pub/repos/yum/9.6/redhat/rhel-7-x86_64/pgdg-redhat-repo-latest.noarch.rpm -y && \
 
  
  
  #yum install postgresql96 postgresql96-server postgresql96-contrib postgresql96-libs -y
  
  
  

  
  #mkdir /home/Installer/oracle_client_rpms/
  
  #COPY ["/third_party_dependency/oracle/oracle-instantclient12.2-basic-12.2.0.1.0-1.x86_64.rpm", "/home/Installer/oracle_client_rpms"]
    #COPY ["/third_party_dependency/oracle/oracle-instantclient12.2-sqlplus-12.2.0.1.0-1.x86_64.rpm", "/home/Installer/oracle_client_rpms"]
	  #COPY ["/third_party_dependency/oracle/oracle-instantclient12.2-devel-12.2.0.1.0-1.x86_64.rpm", "/home/Installer/oracle_client_rpms"]
	    #COPY ["/third_party_dependency/oracle/libaio-0.3.109-13.el7.x86_64.rpm", "/home/Installer/oracle_client_rpms"]
  
  ADD /third_party_dependency/oracle/*.rpm /Installer/oracle_client_rpms/
  
  
  RUN yum install -y libaio.x86_64 glibc.x86_64 && \
      rpm -ivh /Installer/oracle_client_rpms/*.rpm && \
	  mkdir -p /usr/lib/oracle/12.2/client64/network/admin && \
	  echo "*               soft    nofile          100000" >> /etc/security/limits.conf && \
      echo "*               hard    nofile          100000" >> /etc/security/limits.conf && \
      echo "*               soft    nproc           100000" >> /etc/security/limits.conf && \
      echo "*               hard    nproc           100000" >> /etc/security/limits.conf && \
      echo "*               soft    stack           50000" >> /etc/security/limits.conf && \
      echo "*               hard    stack           50000" >> /etc/security/limits.conf && \
      echo "*          soft    nproc     100000" >> /etc/security/limits.d/20-nproc.conf
	  
	COPY ["/third_party_dependency/oracle/tnsnames.ora", "/usr/lib/oracle/12.2/client64/network/admin"]  
  
  
  
  #
  #To pass liveness probe for kubernetes pods
  
  #
 # mkdir -p /data/DB/clients/oracle/product/12.1.0.2 && \
 # useradd oracle

# Define working directory.

RUN useradd nroot && \
    touch /home/nroot/.bashrc && \
    echo umask 022 >> /home/nroot/.bashrc && \
    chown nroot:nroot /home/nroot/.bashrc && \
    echo "*               soft    nofile          100000" >> /etc/security/limits.conf && \
    echo "*               hard    nofile          100000" >> /etc/security/limits.conf && \
    echo "*               soft    nproc           100000" >> /etc/security/limits.conf && \
    echo "*               hard    nproc           100000" >> /etc/security/limits.conf && \
    echo "*               soft    stack           50000" >> /etc/security/limits.conf && \
    echo "*               hard    stack           50000" >> /etc/security/limits.conf && \
   echo "*          soft    nproc     100000" >> /etc/security/limits.d/20-nproc.conf && \
   
   echo export ORACLE_HOME=/usr/lib/oracle/12.2/client64 >> /home/nroot/.bash_profile && \
echo export PATH=$PATH:$ORACLE_HOME/bin >> /home/nroot/.bash_profile && \
echo export LD_LIBRARY_PATH=$ORACLE_HOME/lib >> /home/nroot/.bash_profile && \
echo export TNS_ADMIN=$ORACLE_HOME/network/admin >> /home/nroot/.bash_profile && \
echo export PATH=${PATH}:/home/Informatica/server/bin >> /home/nroot/.bash_profile && \
echo export LD_LIBRARY_PATH=${LD_LIBRARY_PATH}:/home/Informatica/server/bin >> /home/nroot/.bash_profile && \
echo export LANG=en_US.UTF-8 >> /home/nroot/.bash_profile && \
echo export LC_ALL=en_US.UTF-8 >> /home/nroot/.bash_profile && \
echo export JAVA_HOME=/home/Informatica/java >> /home/nroot/.bash_profile && \
echo export INFA_HOME=/home/Informatica >> /home/nroot/.bash_profile && \
echo export PATH=$PATH:/home/Informatica/services/shared/bin >> /home/nroot/.bash_profile


COPY ["/InstallerConfig", "/InstallerConfig"]
COPY ["/Installer", "/Installer"]
COPY ["/Binaries", "/home/Informatica"]
#ENTRYPOINT ["/sbin/init"]
#CMD ["/bin/bash", "/Installer/launcher.sh"]
#ENTRYPOINT ["/sbin/init"]
CMD ["/Installer/docker-entrypoint.sh"]

